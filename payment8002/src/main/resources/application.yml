server:
  port: 8002 #服务端口
spring:
  cloud:
    stream:
      bindings:
        model_input:            #接收消息
          destination: log.model.messages
          binder: local_rabbit
          group: modelConsumer-group1
        log_input:
          destination: kite.log.messages
          binder: local_rabbit
          group: logConsumer-group1
#        log_output:
#          destination: kite.log.messages
#          binder: local_rabbit
#          group: logConsumer-group1
        log_format_input:
          destination: kite.log.format.messages
          binder: local_rabbit
          group: logFormat-group1
#        log_format_output:
#          destination: kite.log.format.messages
#          binder: local_rabbit
#          group: logFormat-group1
      binders:
        local_rabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: localhost
                port: 5672
                username: admin
                password: admin
#  security:
#    basic:
#      enabled: true               # 开启基于HTTP basic的认证
#    user:
#      name: admin                  # 配置登录的账号是admin
#      password: admin       # 配置登录的密码是admin
  application:
    name: cloud-payment-service #服务名
  datasource:  #数据库
    url: jdbc:mysql://localhost:3306/dockermysql?useUnicode=true&characterEncoding=UTF-8
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
eureka:
  client:
    #表示是否将自己注册进EurekaServer默认为true
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册信息，默认为true，单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetch-registry: true
    service-url:
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka #集群版
#      defaultZone: http://admin:admin@eureka7001.com:7001/eureka/,http://admin:admin@eureka7002.com:7002/eureka/ #集群版-用户认证
      #defaultZone: http://eureka7001.com:7001/eureka  #单机版
  #instance:
    #instance-id: payment8002
    #prefer-ip-address: true  #点进去左下角会显示ip
    #Eureka 客户端像服务端发送心跳的时间间隔，单位为秒（默认是30秒）
    #lease-renewal-interval-in-seconds: 1
    #Eureka 服务端收到最后一次心跳后等待时间上线，单位为秒（默认是90秒），超时将剔除服务
    #lease-expiration-duration-in-seconds: 2

#mybatis配置
#mybatis配置
mybatis:
  mapper-locations: classpath*:mapper/*.xml


#showSql
logging:
  level:
    com:
      yu:
        dao : debug