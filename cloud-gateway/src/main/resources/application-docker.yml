server:
  port: 7300
spring:
  profiles:
    active: @env@
#  security:
#    basic:
#      enabled: true               # 开启基于HTTP basic的认证
#    user:
#      name: admin                  # 配置登录的账号是admin
#      password: admin       # 配置登录的密码是admin
  cloud:
    gateway:
      routes:
        - id: order-routes          #请求地址：http://localhost:7300/get/openfeign/1
          uri: http://localhost:80  #eureka注册服务ip
          predicates:               #路径相匹配的进行路由
            - Path=/get/openfeign/**
        #实现payment8001,8002服务动态路由负载均衡   请求地址：http://localhost:7300/mybatis/model/4
        - id: payment_routes #  payment_routh    #路由的ID，没有固定规则但要求唯一，简易配合服务名
          uri: lb://CLOUD-PAYMENT-SERVICE   #匹配后提供服务的路由地址，lb后跟提供服务的微服务的名，不要写错
          predicates:
            - Path=/mybatis/model/**
        - id: order_test #  payment_routh    #路由的ID，没有固定规则但要求唯一，简易配合服务名  http://localhost:7300/get/modelparams?id=1&modelId=343434343
          uri: lb://CLOUD-ORDER-SERVICE   #匹配后提供服务的路由地址，lb后跟提供服务的微服务的名，不要写错
          predicates:
            - Path=/get/modelparams/**
        - id: order_test #  payment_routh    #路由的ID，没有固定规则但要求唯一，简易配合服务名  http://localhost:7300/get/modelparams?id=1&modelId=343434343
          uri: lb://CLOUD-ORDER-SERVICE   #匹配后提供服务的路由地址，lb后跟提供服务的微服务的名，不要写错
          predicates:
            - Path=/post/model/**
        - id: order_test #  payment_routh    #路由的ID，没有固定规则但要求唯一，简易配合服务名  http://localhost:7300/get/modelparams?id=1&modelId=343434343
          uri: lb://CLOUD-ORDER-SERVICE   #匹配后提供服务的路由地址，lb后跟提供服务的微服务的名，不要写错
          predicates:
            - Path=/post/list/**
        - id: order_test #  payment_routh    #路由的ID，没有固定规则但要求唯一，简易配合服务名  http://localhost:7300/get/modelparams?id=1&modelId=343434343
          uri: lb://CLOUD-ORDER-SERVICE   #匹配后提供服务的路由地址，lb后跟提供服务的微服务的名，不要写错
          predicates:
            - Path=/http/post/**
        - id: order_test #  payment_routh    #路由的ID，没有固定规则但要求唯一，简易配合服务名  http://localhost:7300/get/modelparams?id=1&modelId=343434343
          uri: lb://CLOUD-ORDER-SERVICE   #匹配后提供服务的路由地址，lb后跟提供服务的微服务的名，不要写错
          predicates:
            - Path=/http/get/**
          filters:
            - name: RequestRateLimiter
              args:
                #用于限流的键的解析器的 Bean 对象的名字。它使用 SpEL 表达式根据#{@beanName}从 Spring 容器中获取 Bean 对象
                #key-resolver: "#{@hostAddKeyResolver}"
                key-resolver: "#{@ipKeyResolver}"
                #允许用户每秒处理多少个请求
                redis-rate-limiter.replenishRate: 1
                #令牌桶的容量，允许在一秒钟内完成的最大请求数
                redis-rate-limiter.burstCapacity: 2
    loadbalancer:
      ribbon:
        enabled: false
  application:
    name: cloud-gateway
  datasource:  #数据库
    url: jdbc:mysql://172.17.0.2:3306/dockermysql?useUnicode=true&characterEncoding=UTF-8 #docker配置指定ip
    #    url: jdbc:mysql://localhost:3306/dockermysql?useUnicode=true&characterEncoding=UTF-8
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver

eureka:
  client:
    #指示此实例是否应将其信息注册到eureka服务器以供其他服务发现，默认为false
    register-with-eureka: true
    #是否从Server获取注册信息
    fetch-registry: true
    #定时从Eureka Server拉取服务注册信息的间隔时间(默认30秒，单位：s/秒）
    registry-fetch-interval-seconds: 5
    service-url:
      defaultZone:  http://172.17.0.5:7001/eureka,http://172.17.0.6:7002/eureka #集群版
#      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka #集群版
#      defaultZone: http://admin:admin@eureka7001.com:7001/eureka/,http://admin:admin@eureka7002.com:7002/eureka/ #集群版-用户认证
  instance:
    instance-id: gateway7300
    prefer-ip-address: true
    #实例续约间隔时间(默认30秒)
    lease-renewal-interval-in-seconds: 5
    #实例超时时间，表示*秒后没有续约，Server就认为他不可用了，随之就会将其剔除。
    lease-expiration-duration-in-seconds: 15
    status-page-url-path: management/info
    health-check-url-path: management/health


app_id: 2021000116682104
alipay_public_key: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAm1ri3uNj3HiQ+rUxhHRJknuSx0FrkSFLkHXqyT5MmlGpIiZ4dVRfNRkp7f27ptmgzy6xBs0jKRPh381Oa4ydqjaDIeSZ+jxWCKsyYRZh3+cPzL91pb/XjCA3khIU6Vgp3IEKRMGq9VsONvqehu1BZeA5INW56Lh4bd8tV/pfPvy+w8MIniRbdsRleFKOSE6AdvljecJH5wzFT4GtsLRsaPG1QgWhJ7d1MnbiZzGSJNyVaGoCa175JC1c72mkdHp0s2/ClEAzlJfcwU78UC9pvBKL3763sNT6hDAibYlWwYjAcGJ0teKc6uaJmG53b7t8QbFQKq0EXQaD//FK8jjXIQIDAQAB
merchant_private_key: MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDKyuEGNQ7vIsuK8oyiu7+ahwJ2tvWaZTrB+cttDs4MjQvANpppALNrHNahbkAga52tuswAYimVVpAjAFFridiCg34017hfwQHAw2SgFVBamjB1NCmrYkwEyJGaY7InP4yThWwTG9p4I4bLgTz7Yj5xvXKIy0pl1hStqtO1WKGBU+Q9tJ+4y2PEpSys7iE9ZSbN0zLxqJzSJ0W76s3uckx7MmovYleiXkxu9zBkcfY1924cqzjiBRDQBVhCAnpiYMhcQwDF9spbqZb8kyPKH+Oc25S2wJeEdlBO3+CF3LfBdR/GsJuPphpwLF0Owrxg8OPAS9eRbwhJWz+R5tOkUEX3AgMBAAECggEBAIPpMDKfdNVs5sW9PGnmgp370Eh0fpIt4uimmgKYrMNRRCGF4y8GO68jFSHw21m7ZtfJOEXPlIkFw8BgxpWTFvjem8u3vsDahU9kSiIvexNUVM0IX0qSKCy8Yqnwy8Pn/INBOKm9ZoDbayUZLhe/Mis+NjBxPDW96bmF8yx1OKksReQ+rx8O/L92csvOinZMJplKc0frmsqBOeSirl+kTDDMVeL1qndiBBGWhZ+D8x/3GgOc54qFAU9UdbBVTXrsFppgPBYJQ1aZexWWeuJKxc5gN1d/TRKLpExe/pgV0x3nOrB6DNzoxQl2I7wMkxa7bIT3XRFI71yasvfHsLE7RrECgYEA8GESuWeBAaHeSRNlIj/Obvrk6Hx9hnVHla9N+3PJXWUIdOu/2VKyFfSn6ll6A6bnhAttgMg7gRMLIHnT0ycTBBkLnfLXEbuVzRR7yA3YZ6WzfraJpBqJHULqWJmFTZzgqGldm3HGyEnwS2w0lqvFNSHkKEYDALMgvCi3K7gPurUCgYEA1/iEVYXMjWgFb/BWdHuGeYeeq8ZswWnCwJ/U54Hcr/pPDcgQL+bLsfVQ2ginMsEn5ijiRxM25HgQRlVt/y6QPBAPMlyGoR82sU2UwVmj+aJymYP88AQJ6TgdAMnhn0c3M9s2Q4NKKj/q64NZwF5nrZuJBnMapNEUKrxdndpI7XsCgYEAzBuhKo0Ynao0dRhi55IGV3XyqPYMH/+1qQQR01Gdyg/f/mevn3j4fmwfqH4RfMhcDWMmuBNNc2wYJptLoh+rpe8eTh/FPulpaZnbASPAfUHWB+I3PYDKrG4FTvYMmrp6iIXvVe5mO+uMfn6CqO1xpowAj7HjGtT/FsX7wsOnl4ECgYBl+5lp1SOxhnRC1qfMm2P10V/Q14MVlf57/T2JEJ6Ijtdzt4xFQmPfperG+p0Rb3qKybWIQH+ERVnSDJdDj9ZWNnMmoeCFBvtJoEvlPZIb2GTrLxNqt02CzpeLfslG8FcV6qbmHIISD1q8WasxFqM4rKB45jOnrn8qawZ9+szDLwKBgEHMPkXFPWp/6XgjSOD66M7saY1JBCjwJ4UkwgU+jFIBIWs7GC1POtQEErnzN2FCGQkC83C8A4w8dBx2UJw8V+mNgdeWE2dda259R0pYF4MDe5JOzFCYitP0YoqG81tx0TtsNFfodBbQ5z937Q2XVN++DqAUk1Y/g4QISdm5gTaS
notify_url: http://zfb.vaiwan.com/alipay/callback
return_url: http://zfb.vaiwan.com/alipay/show
gatewayUrl: https://openapi.alipaydev.com/gateway.do
sign_type: RSA2
charset: UTF-8